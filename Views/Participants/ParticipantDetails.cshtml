@model GCUSMS.ViewModels.ParticipantVM
@using Microsoft.AspNetCore.Identity
@inject SignInManager<StudentModel> SignInManager
@inject UserManager<StudentModel> UserManager

@{ ViewData["Title"] = "Details"; }

@{
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

@if (Model != null)
{
    <div class="m-3">
        <h2 class="alert-heading">
            <span class="text-primary">@Model.RequestingStudent.FirstName @Model.RequestingStudent.LastName</span> for <span class="text-primary">@Model.TournamentApplied.TournamentName</span>
        </h2>
        <hr />

        <h5 class="text-primary">Personal Details <i class="fas fa-user"></i></h5>
        <br />
        <dl class="row">
            <dt class="col-sm-2">
                Profile Image
            </dt>
            <dd class="col-sm-10">
                <img src="~/images/Users/@Model.RequestingStudent.ProfileImagePath" class="rounded float-left" style="max-height:200px" alt="User Image">
            </dd>

            <dt class="col-sm-2">
                Valid Email Address
            </dt>
            <dd class="col-sm-10">
                <p class="text-primary">@Model.ValidEmail</p>
            </dd>

            <dt class="col-sm-2">
                Full Name
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingStudent.FirstName)  @Html.DisplayFor(model => model.RequestingStudent.LastName)
            </dd>

            <dt class="col-sm-2">
                Father Name
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingStudent.FatherName)
            </dd>

            <dt class="col-sm-2">
                Roll No
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingStudent.RollNumber)
            </dd>

            <dt class="col-sm-2">
                Gender
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingStudent.Gender)
            </dd>

            <dt class="col-sm-2">
                Section
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingStudent.Section)
            </dd>

            <dt class="col-sm-2">
                Semester
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingStudent.Semester)
            </dd>

            <dt class="col-sm-2">
                Department
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingStudent.DepartmentName)
            </dd>

            <dt class="col-sm-2">
                Age
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingStudent.Age)
            </dd>

            <dt class="col-sm-2">
                Date of Birth
            </dt>
            <dd class="col-sm-10">
                @Model.RequestingStudent.DateOfBirth.ToString("dd MMMM yyyy")
            </dd>
        </dl>
        <hr />

        <h5 class="text-primary">Tournament Details <i class="far fa-futbol"></i></h5>
        <br />

        <dl class="row">
            <dt class="col-sm-2">
                Tournament Name
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.TournamentApplied.TournamentName)
            </dd>

            <dt class="col-sm-2">
                Date Applied
            </dt>
            <dd class="col-sm-10">
                @Model.DateApplied.ToString("dddd, dd MMMM yyyy")
            </dd>

            <dt class="col-sm-2">
                Selection Date
            </dt>

            @if (@Model.DateSelected.Year == 0001)
            {
                <dd class="col-sm-10">
                    <span class="badge badge-warning">Pending</span>
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    @Model.DateSelected.ToString("dddd, dd MMMM yyyy")
                </dd>
            }


            <dt class="col-sm-2">
                Tournament Venue
            </dt>
            <dd class="col-sm-10">
                @Model.TournamentApplied.TournamentVenue
            </dd>


            <dt class="col-sm-2">
                Last Date to Apply
            </dt>

            <dd class="col-sm-10">
                @Model.TournamentApplied.DueDate <br />
                <small class="text-muted">Date Today: @DateTime.Now.ToString("dddd, dd MMMM yyyy")</small>
            </dd>



            <dt class="col-sm-2">
                Start Date
            </dt>

            <dd class="col-sm-10">
                @Model.TournamentApplied.StartDate
            </dd>



            <dt class="col-sm-2">
                End date
            </dt>

            <dd class="col-sm-10">
                @Model.TournamentApplied.EndDate
            </dd>

            <dt class="col-sm-2">
                Selection Status
            </dt>
            @if (Model.isSelected == true)
            {
                <dd class="col-sm-10">
                    <span class="badge badge-success">Selected</span>
                </dd>
            }
            else if (Model.isSelected == false)
            {
                <dd class="col-sm-10">
                    <span class="badge badge-danger">Not Selected</span>
                </dd>
            }

        </dl>
        <hr />

    </div>

    <h5 class="text-primary">Actions to perform <i class="fas fa-tasks"></i></h5>

    <div class="m-4 d-flex justify-content-center">
        @if (SignInManager.IsSignedIn(User))
        {
            if (User.IsInRole("Administrator"))
            {
                <a class="btn btn-outline-secondary m-2" asp-action="ParticipantListAdmin">
                    <i class="fa fa-arrow-left"></i> Back to List
                </a>
            }
            if (User.IsInRole("Student"))
            {
                <a class="btn btn-outline-secondary m-2" asp-action="ParticipantListCaptain">
                    <i class="fa fa-arrow-left"></i> Back to List
                </a>
            }
        }
        
        <a class="btn btn-success m-2" asp-action="ApproveRequestParticipant" asp-route-id="@Model.ParticipantId">
            <i class="fa fa-check"></i> Select
        </a>

        <a class="btn btn-danger m-2" asp-action="RejectRequestParticipant" asp-route-id="@Model.ParticipantId">
            <i class="fa fa-remove"></i> Reject Application
        </a>

    </div>
}
else
{
    <div class="text-center mt-5">

        <span class="fas fa-exclamation-triangle text-red" style="font-size:17rem;"></span>
        <h1 class="m-5">Something Went Wrong</h1>
        <p class="text-muted">
            Record with id does not exist!
        </p>
        <a class="btn btn-outline-secondary" asp-controller="Home" asp-action="Index">
            <i class="fa fa-arrow-left"></i> Go Back
        </a>

    </div>
}